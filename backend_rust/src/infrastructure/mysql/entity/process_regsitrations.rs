//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "process_regsitrations")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u64,
    pub process_id: u64,
    pub recipe_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::processes::Entity",
        from = "Column::ProcessId",
        to = "super::processes::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Processes,
    #[sea_orm(
        belongs_to = "super::recipes::Entity",
        from = "Column::RecipeId",
        to = "super::recipes::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Recipes,
}

impl Related<super::processes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Processes.def()
    }
}

impl Related<super::recipes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Recipes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
