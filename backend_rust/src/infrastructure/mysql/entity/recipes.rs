//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "recipes")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub title: String,
    pub description: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::process_registrations::Entity")]
    ProcessRegistrations,
    #[sea_orm(has_many = "super::steps::Entity")]
    Steps,
}

impl Related<super::process_registrations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProcessRegistrations.def()
    }
}

impl Related<super::steps::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Steps.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
